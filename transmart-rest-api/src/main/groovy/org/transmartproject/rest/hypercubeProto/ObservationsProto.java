// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/protobuf/v2/observations.proto

package org.transmartproject.rest.hypercubeProto;

public final class ObservationsProto {
  private ObservationsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code hypercube.Type}
   */
  public enum Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOUBLE = 0;</code>
     */
    DOUBLE(0),
    /**
     * <code>STRING = 1;</code>
     */
    STRING(1),
    /**
     * <code>INT = 2;</code>
     */
    INT(2),
    /**
     * <code>TIMESTAMP = 3;</code>
     */
    TIMESTAMP(3),
    /**
     * <code>OBJECT = 4;</code>
     */
    OBJECT(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DOUBLE = 0;</code>
     */
    public static final int DOUBLE_VALUE = 0;
    /**
     * <code>STRING = 1;</code>
     */
    public static final int STRING_VALUE = 1;
    /**
     * <code>INT = 2;</code>
     */
    public static final int INT_VALUE = 2;
    /**
     * <code>TIMESTAMP = 3;</code>
     */
    public static final int TIMESTAMP_VALUE = 3;
    /**
     * <code>OBJECT = 4;</code>
     */
    public static final int OBJECT_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Type valueOf(int value) {
      return forNumber(value);
    }

    public static Type forNumber(int value) {
      switch (value) {
        case 0: return DOUBLE;
        case 1: return STRING;
        case 2: return INT;
        case 3: return TIMESTAMP;
        case 4: return OBJECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Type[] VALUES = values();

    public static Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:hypercube.Type)
  }

  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration> 
        getDimensionDeclarationsList();
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration getDimensionDeclarations(int index);
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    int getDimensionDeclarationsCount();
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder> 
        getDimensionDeclarationsOrBuilderList();
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder getDimensionDeclarationsOrBuilder(
        int index);

    /**
     * <pre>
     * same meaning as in Observation
     * </pre>
     *
     * <code>optional bool last = 2;</code>
     */
    boolean getLast();
  }
  /**
   * <pre>
   * header is sent without chunking in a one message
   * </pre>
   *
   * Protobuf type {@code hypercube.Header}
   */
  public  static final class Header extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.Header)
      HeaderOrBuilder {
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Header() {
      dimensionDeclarations_ = java.util.Collections.emptyList();
      last_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dimensionDeclarations_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration>();
                mutable_bitField0_ |= 0x00000001;
              }
              dimensionDeclarations_.add(
                  input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.parser(), extensionRegistry));
              break;
            }
            case 16: {

              last_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionDeclarations_ = java.util.Collections.unmodifiableList(dimensionDeclarations_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Header_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.Header.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Header.Builder.class);
    }

    private int bitField0_;
    public static final int DIMENSIONDECLARATIONS_FIELD_NUMBER = 1;
    private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration> dimensionDeclarations_;
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration> getDimensionDeclarationsList() {
      return dimensionDeclarations_;
    }
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder> 
        getDimensionDeclarationsOrBuilderList() {
      return dimensionDeclarations_;
    }
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    public int getDimensionDeclarationsCount() {
      return dimensionDeclarations_.size();
    }
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration getDimensionDeclarations(int index) {
      return dimensionDeclarations_.get(index);
    }
    /**
     * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder getDimensionDeclarationsOrBuilder(
        int index) {
      return dimensionDeclarations_.get(index);
    }

    public static final int LAST_FIELD_NUMBER = 2;
    private boolean last_;
    /**
     * <pre>
     * same meaning as in Observation
     * </pre>
     *
     * <code>optional bool last = 2;</code>
     */
    public boolean getLast() {
      return last_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dimensionDeclarations_.size(); i++) {
        output.writeMessage(1, dimensionDeclarations_.get(i));
      }
      if (last_ != false) {
        output.writeBool(2, last_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dimensionDeclarations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dimensionDeclarations_.get(i));
      }
      if (last_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, last_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Header)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.Header other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Header) obj;

      boolean result = true;
      result = result && getDimensionDeclarationsList()
          .equals(other.getDimensionDeclarationsList());
      result = result && (getLast()
          == other.getLast());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getDimensionDeclarationsCount() > 0) {
        hash = (37 * hash) + DIMENSIONDECLARATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionDeclarationsList().hashCode();
      }
      hash = (37 * hash) + LAST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLast());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * header is sent without chunking in a one message
     * </pre>
     *
     * Protobuf type {@code hypercube.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.Header)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.Header.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Header.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDimensionDeclarationsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (dimensionDeclarationsBuilder_ == null) {
          dimensionDeclarations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dimensionDeclarationsBuilder_.clear();
        }
        last_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Header_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Header getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.Header.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Header build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Header buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Header result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Header(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (dimensionDeclarationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dimensionDeclarations_ = java.util.Collections.unmodifiableList(dimensionDeclarations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dimensionDeclarations_ = dimensionDeclarations_;
        } else {
          result.dimensionDeclarations_ = dimensionDeclarationsBuilder_.build();
        }
        result.last_ = last_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Header) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.Header other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.Header.getDefaultInstance()) return this;
        if (dimensionDeclarationsBuilder_ == null) {
          if (!other.dimensionDeclarations_.isEmpty()) {
            if (dimensionDeclarations_.isEmpty()) {
              dimensionDeclarations_ = other.dimensionDeclarations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDimensionDeclarationsIsMutable();
              dimensionDeclarations_.addAll(other.dimensionDeclarations_);
            }
            onChanged();
          }
        } else {
          if (!other.dimensionDeclarations_.isEmpty()) {
            if (dimensionDeclarationsBuilder_.isEmpty()) {
              dimensionDeclarationsBuilder_.dispose();
              dimensionDeclarationsBuilder_ = null;
              dimensionDeclarations_ = other.dimensionDeclarations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dimensionDeclarationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDimensionDeclarationsFieldBuilder() : null;
            } else {
              dimensionDeclarationsBuilder_.addAllMessages(other.dimensionDeclarations_);
            }
          }
        }
        if (other.getLast() != false) {
          setLast(other.getLast());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Header) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration> dimensionDeclarations_ =
        java.util.Collections.emptyList();
      private void ensureDimensionDeclarationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionDeclarations_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration>(dimensionDeclarations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder> dimensionDeclarationsBuilder_;

      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration> getDimensionDeclarationsList() {
        if (dimensionDeclarationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dimensionDeclarations_);
        } else {
          return dimensionDeclarationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public int getDimensionDeclarationsCount() {
        if (dimensionDeclarationsBuilder_ == null) {
          return dimensionDeclarations_.size();
        } else {
          return dimensionDeclarationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration getDimensionDeclarations(int index) {
        if (dimensionDeclarationsBuilder_ == null) {
          return dimensionDeclarations_.get(index);
        } else {
          return dimensionDeclarationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder setDimensionDeclarations(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration value) {
        if (dimensionDeclarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionDeclarationsIsMutable();
          dimensionDeclarations_.set(index, value);
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder setDimensionDeclarations(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder builderForValue) {
        if (dimensionDeclarationsBuilder_ == null) {
          ensureDimensionDeclarationsIsMutable();
          dimensionDeclarations_.set(index, builderForValue.build());
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder addDimensionDeclarations(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration value) {
        if (dimensionDeclarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionDeclarationsIsMutable();
          dimensionDeclarations_.add(value);
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder addDimensionDeclarations(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration value) {
        if (dimensionDeclarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionDeclarationsIsMutable();
          dimensionDeclarations_.add(index, value);
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder addDimensionDeclarations(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder builderForValue) {
        if (dimensionDeclarationsBuilder_ == null) {
          ensureDimensionDeclarationsIsMutable();
          dimensionDeclarations_.add(builderForValue.build());
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder addDimensionDeclarations(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder builderForValue) {
        if (dimensionDeclarationsBuilder_ == null) {
          ensureDimensionDeclarationsIsMutable();
          dimensionDeclarations_.add(index, builderForValue.build());
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder addAllDimensionDeclarations(
          java.lang.Iterable<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration> values) {
        if (dimensionDeclarationsBuilder_ == null) {
          ensureDimensionDeclarationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dimensionDeclarations_);
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder clearDimensionDeclarations() {
        if (dimensionDeclarationsBuilder_ == null) {
          dimensionDeclarations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public Builder removeDimensionDeclarations(int index) {
        if (dimensionDeclarationsBuilder_ == null) {
          ensureDimensionDeclarationsIsMutable();
          dimensionDeclarations_.remove(index);
          onChanged();
        } else {
          dimensionDeclarationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder getDimensionDeclarationsBuilder(
          int index) {
        return getDimensionDeclarationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder getDimensionDeclarationsOrBuilder(
          int index) {
        if (dimensionDeclarationsBuilder_ == null) {
          return dimensionDeclarations_.get(index);  } else {
          return dimensionDeclarationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder> 
           getDimensionDeclarationsOrBuilderList() {
        if (dimensionDeclarationsBuilder_ != null) {
          return dimensionDeclarationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dimensionDeclarations_);
        }
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder addDimensionDeclarationsBuilder() {
        return getDimensionDeclarationsFieldBuilder().addBuilder(
            org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.getDefaultInstance());
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder addDimensionDeclarationsBuilder(
          int index) {
        return getDimensionDeclarationsFieldBuilder().addBuilder(
            index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.getDefaultInstance());
      }
      /**
       * <code>repeated .hypercube.DimensionDeclaration dimensionDeclarations = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder> 
           getDimensionDeclarationsBuilderList() {
        return getDimensionDeclarationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder> 
          getDimensionDeclarationsFieldBuilder() {
        if (dimensionDeclarationsBuilder_ == null) {
          dimensionDeclarationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder>(
                  dimensionDeclarations_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dimensionDeclarations_ = null;
        }
        return dimensionDeclarationsBuilder_;
      }

      private boolean last_ ;
      /**
       * <pre>
       * same meaning as in Observation
       * </pre>
       *
       * <code>optional bool last = 2;</code>
       */
      public boolean getLast() {
        return last_;
      }
      /**
       * <pre>
       * same meaning as in Observation
       * </pre>
       *
       * <code>optional bool last = 2;</code>
       */
      public Builder setLast(boolean value) {
        
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * same meaning as in Observation
       * </pre>
       *
       * <code>optional bool last = 2;</code>
       */
      public Builder clearLast() {
        
        last_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.Header)
    }

    // @@protoc_insertion_point(class_scope:hypercube.Header)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Header();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Header>
        PARSER = new com.google.protobuf.AbstractParser<Header>() {
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Header(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DimensionDeclarationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.DimensionDeclaration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * A description of the elements of the dimension. 
     * </pre>
     *
     * <code>optional .hypercube.Type type = 2;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * A description of the elements of the dimension. 
     * </pre>
     *
     * <code>optional .hypercube.Type type = 2;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.Type getType();

    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition> 
        getFieldsList();
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition getFields(int index);
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <pre>
     * If true, the dimension elements will be stored in the
     *observation cell instead of the footer. 
     * </pre>
     *
     * <code>optional bool inline = 4;</code>
     */
    boolean getInline();

    /**
     * <pre>
     * If true, observations are packed along this dimension. Only one dimension can have
     *this flag set, and this flag is mutually exclusive with the 'inline' flag.
     * </pre>
     *
     * <code>optional bool packed = 5;</code>
     */
    boolean getPacked();

    /**
     * <pre>
     * Only used if the dimension elements are sent in the header instead of the footer. 
     * </pre>
     *
     * <code>optional .hypercube.DimensionElements elements = 6;</code>
     */
    boolean hasElements();
    /**
     * <pre>
     * Only used if the dimension elements are sent in the header instead of the footer. 
     * </pre>
     *
     * <code>optional .hypercube.DimensionElements elements = 6;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getElements();
    /**
     * <pre>
     * Only used if the dimension elements are sent in the header instead of the footer. 
     * </pre>
     *
     * <code>optional .hypercube.DimensionElements elements = 6;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getElementsOrBuilder();
  }
  /**
   * <pre>
   * each dimension present in the output is declared with this message
   * </pre>
   *
   * Protobuf type {@code hypercube.DimensionDeclaration}
   */
  public  static final class DimensionDeclaration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.DimensionDeclaration)
      DimensionDeclarationOrBuilder {
    // Use DimensionDeclaration.newBuilder() to construct.
    private DimensionDeclaration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DimensionDeclaration() {
      name_ = "";
      type_ = 0;
      fields_ = java.util.Collections.emptyList();
      inline_ = false;
      packed_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DimensionDeclaration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fields_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition>();
                mutable_bitField0_ |= 0x00000004;
              }
              fields_.add(
                  input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.parser(), extensionRegistry));
              break;
            }
            case 32: {

              inline_ = input.readBool();
              break;
            }
            case 40: {

              packed_ = input.readBool();
              break;
            }
            case 50: {
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder subBuilder = null;
              if (elements_ != null) {
                subBuilder = elements_.toBuilder();
              }
              elements_ = input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(elements_);
                elements_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionDeclaration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionDeclaration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     * A description of the elements of the dimension. 
     * </pre>
     *
     * <code>optional .hypercube.Type type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * A description of the elements of the dimension. 
     * </pre>
     *
     * <code>optional .hypercube.Type type = 2;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Type getType() {
      org.transmartproject.rest.hypercubeProto.ObservationsProto.Type result = org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.valueOf(type_);
      return result == null ? org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.UNRECOGNIZED : result;
    }

    public static final int FIELDS_FIELD_NUMBER = 3;
    private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition> fields_;
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int INLINE_FIELD_NUMBER = 4;
    private boolean inline_;
    /**
     * <pre>
     * If true, the dimension elements will be stored in the
     *observation cell instead of the footer. 
     * </pre>
     *
     * <code>optional bool inline = 4;</code>
     */
    public boolean getInline() {
      return inline_;
    }

    public static final int PACKED_FIELD_NUMBER = 5;
    private boolean packed_;
    /**
     * <pre>
     * If true, observations are packed along this dimension. Only one dimension can have
     *this flag set, and this flag is mutually exclusive with the 'inline' flag.
     * </pre>
     *
     * <code>optional bool packed = 5;</code>
     */
    public boolean getPacked() {
      return packed_;
    }

    public static final int ELEMENTS_FIELD_NUMBER = 6;
    private org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements elements_;
    /**
     * <pre>
     * Only used if the dimension elements are sent in the header instead of the footer. 
     * </pre>
     *
     * <code>optional .hypercube.DimensionElements elements = 6;</code>
     */
    public boolean hasElements() {
      return elements_ != null;
    }
    /**
     * <pre>
     * Only used if the dimension elements are sent in the header instead of the footer. 
     * </pre>
     *
     * <code>optional .hypercube.DimensionElements elements = 6;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getElements() {
      return elements_ == null ? org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance() : elements_;
    }
    /**
     * <pre>
     * Only used if the dimension elements are sent in the header instead of the footer. 
     * </pre>
     *
     * <code>optional .hypercube.DimensionElements elements = 6;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getElementsOrBuilder() {
      return getElements();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.DOUBLE.getNumber()) {
        output.writeEnum(2, type_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(3, fields_.get(i));
      }
      if (inline_ != false) {
        output.writeBool(4, inline_);
      }
      if (packed_ != false) {
        output.writeBool(5, packed_);
      }
      if (elements_ != null) {
        output.writeMessage(6, getElements());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.DOUBLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fields_.get(i));
      }
      if (inline_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, inline_);
      }
      if (packed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, packed_);
      }
      if (elements_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getElements());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && type_ == other.type_;
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && (getInline()
          == other.getInline());
      result = result && (getPacked()
          == other.getPacked());
      result = result && (hasElements() == other.hasElements());
      if (hasElements()) {
        result = result && getElements()
            .equals(other.getElements());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (37 * hash) + INLINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInline());
      hash = (37 * hash) + PACKED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPacked());
      if (hasElements()) {
        hash = (37 * hash) + ELEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getElements().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * each dimension present in the output is declared with this message
     * </pre>
     *
     * Protobuf type {@code hypercube.DimensionDeclaration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.DimensionDeclaration)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclarationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionDeclaration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionDeclaration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        type_ = 0;

        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          fieldsBuilder_.clear();
        }
        inline_ = false;

        packed_ = false;

        if (elementsBuilder_ == null) {
          elements_ = null;
        } else {
          elements_ = null;
          elementsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionDeclaration_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.type_ = type_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.inline_ = inline_;
        result.packed_ = packed_;
        if (elementsBuilder_ == null) {
          result.elements_ = elements_;
        } else {
          result.elements_ = elementsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000004);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (other.getInline() != false) {
          setInline(other.getInline());
        }
        if (other.getPacked() != false) {
          setPacked(other.getPacked());
        }
        if (other.hasElements()) {
          mergeElements(other.getElements());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * A description of the elements of the dimension. 
       * </pre>
       *
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * A description of the elements of the dimension. 
       * </pre>
       *
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A description of the elements of the dimension. 
       * </pre>
       *
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Type getType() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Type result = org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.valueOf(type_);
        return result == null ? org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * A description of the elements of the dimension. 
       * </pre>
       *
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public Builder setType(org.transmartproject.rest.hypercubeProto.ObservationsProto.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A description of the elements of the dimension. 
       * </pre>
       *
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fields_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition>(fields_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder setFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder setFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder addFields(org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder addFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder addFields(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder addFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.getDefaultInstance());
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.getDefaultInstance());
      }
      /**
       * <code>repeated .hypercube.FieldDefinition fields = 3;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private boolean inline_ ;
      /**
       * <pre>
       * If true, the dimension elements will be stored in the
       *observation cell instead of the footer. 
       * </pre>
       *
       * <code>optional bool inline = 4;</code>
       */
      public boolean getInline() {
        return inline_;
      }
      /**
       * <pre>
       * If true, the dimension elements will be stored in the
       *observation cell instead of the footer. 
       * </pre>
       *
       * <code>optional bool inline = 4;</code>
       */
      public Builder setInline(boolean value) {
        
        inline_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the dimension elements will be stored in the
       *observation cell instead of the footer. 
       * </pre>
       *
       * <code>optional bool inline = 4;</code>
       */
      public Builder clearInline() {
        
        inline_ = false;
        onChanged();
        return this;
      }

      private boolean packed_ ;
      /**
       * <pre>
       * If true, observations are packed along this dimension. Only one dimension can have
       *this flag set, and this flag is mutually exclusive with the 'inline' flag.
       * </pre>
       *
       * <code>optional bool packed = 5;</code>
       */
      public boolean getPacked() {
        return packed_;
      }
      /**
       * <pre>
       * If true, observations are packed along this dimension. Only one dimension can have
       *this flag set, and this flag is mutually exclusive with the 'inline' flag.
       * </pre>
       *
       * <code>optional bool packed = 5;</code>
       */
      public Builder setPacked(boolean value) {
        
        packed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, observations are packed along this dimension. Only one dimension can have
       *this flag set, and this flag is mutually exclusive with the 'inline' flag.
       * </pre>
       *
       * <code>optional bool packed = 5;</code>
       */
      public Builder clearPacked() {
        
        packed_ = false;
        onChanged();
        return this;
      }

      private org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements elements_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> elementsBuilder_;
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public boolean hasElements() {
        return elementsBuilder_ != null || elements_ != null;
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getElements() {
        if (elementsBuilder_ == null) {
          return elements_ == null ? org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance() : elements_;
        } else {
          return elementsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public Builder setElements(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (elementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          elements_ = value;
          onChanged();
        } else {
          elementsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public Builder setElements(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder builderForValue) {
        if (elementsBuilder_ == null) {
          elements_ = builderForValue.build();
          onChanged();
        } else {
          elementsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public Builder mergeElements(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (elementsBuilder_ == null) {
          if (elements_ != null) {
            elements_ =
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.newBuilder(elements_).mergeFrom(value).buildPartial();
          } else {
            elements_ = value;
          }
          onChanged();
        } else {
          elementsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public Builder clearElements() {
        if (elementsBuilder_ == null) {
          elements_ = null;
          onChanged();
        } else {
          elements_ = null;
          elementsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder getElementsBuilder() {
        
        onChanged();
        return getElementsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getElementsOrBuilder() {
        if (elementsBuilder_ != null) {
          return elementsBuilder_.getMessageOrBuilder();
        } else {
          return elements_ == null ?
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance() : elements_;
        }
      }
      /**
       * <pre>
       * Only used if the dimension elements are sent in the header instead of the footer. 
       * </pre>
       *
       * <code>optional .hypercube.DimensionElements elements = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
          getElementsFieldBuilder() {
        if (elementsBuilder_ == null) {
          elementsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder>(
                  getElements(),
                  getParentForChildren(),
                  isClean());
          elements_ = null;
        }
        return elementsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.DimensionDeclaration)
    }

    // @@protoc_insertion_point(class_scope:hypercube.DimensionDeclaration)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DimensionDeclaration>
        PARSER = new com.google.protobuf.AbstractParser<DimensionDeclaration>() {
      public DimensionDeclaration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DimensionDeclaration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DimensionDeclaration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DimensionDeclaration> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionDeclaration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FieldDefinitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.FieldDefinition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
     * age, gender, race, etc.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
     * age, gender, race, etc.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .hypercube.Type type = 2;</code>
     */
    int getTypeValue();
    /**
     * <code>optional .hypercube.Type type = 2;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.Type getType();
  }
  /**
   * <pre>
   * each field (dimension element) has its definition specifying type of its value
   * </pre>
   *
   * Protobuf type {@code hypercube.FieldDefinition}
   */
  public  static final class FieldDefinition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.FieldDefinition)
      FieldDefinitionOrBuilder {
    // Use FieldDefinition.newBuilder() to construct.
    private FieldDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FieldDefinition() {
      name_ = "";
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FieldDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_FieldDefinition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_FieldDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
     * age, gender, race, etc.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
     * age, gender, race, etc.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>optional .hypercube.Type type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .hypercube.Type type = 2;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Type getType() {
      org.transmartproject.rest.hypercubeProto.ObservationsProto.Type result = org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.valueOf(type_);
      return result == null ? org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.DOUBLE.getNumber()) {
        output.writeEnum(2, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.DOUBLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && type_ == other.type_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * each field (dimension element) has its definition specifying type of its value
     * </pre>
     *
     * Protobuf type {@code hypercube.FieldDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.FieldDefinition)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_FieldDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_FieldDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_FieldDefinition_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition(this);
        result.name_ = name_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
       * age, gender, race, etc.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
       * age, gender, race, etc.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
       * age, gender, race, etc.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
       * age, gender, race, etc.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Examples of this for the Patient dimension would be the fields of a Patient object, e.g.
       * age, gender, race, etc.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Type getType() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Type result = org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.valueOf(type_);
        return result == null ? org.transmartproject.rest.hypercubeProto.ObservationsProto.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public Builder setType(org.transmartproject.rest.hypercubeProto.ObservationsProto.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .hypercube.Type type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.FieldDefinition)
    }

    // @@protoc_insertion_point(class_scope:hypercube.FieldDefinition)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FieldDefinition>
        PARSER = new com.google.protobuf.AbstractParser<FieldDefinition>() {
      public FieldDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FieldDefinition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FieldDefinition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FieldDefinition> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.FieldDefinition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ObservationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.Observation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
     * dimension along which observations are packed, if packing is used) and follows their
     * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
     * 'not present'.
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    java.util.List<java.lang.Long> getDimensionIndexesList();
    /**
     * <pre>
     * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
     * dimension along which observations are packed, if packing is used) and follows their
     * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
     * 'not present'.
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    int getDimensionIndexesCount();
    /**
     * <pre>
     * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
     * dimension along which observations are packed, if packing is used) and follows their
     * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
     * 'not present'.
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    long getDimensionIndexes(int index);

    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> 
        getInlineDimensionsList();
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getInlineDimensions(int index);
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    int getInlineDimensionsCount();
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
        getInlineDimensionsOrBuilderList();
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder getInlineDimensionsOrBuilder(
        int index);

    /**
     * <code>optional string stringValue = 3;</code>
     */
    java.lang.String getStringValue();
    /**
     * <code>optional string stringValue = 3;</code>
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>optional double numericValue = 4;</code>
     */
    double getNumericValue();

    /**
     * <pre>
     * Set to true on the last observation, the last observation is followed by a footer.
     * </pre>
     *
     * <code>optional bool last = 7;</code>
     */
    boolean getLast();

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code hypercube.Observation}
   */
  public  static final class Observation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.Observation)
      ObservationOrBuilder {
    // Use Observation.newBuilder() to construct.
    private Observation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Observation() {
      dimensionIndexes_ = java.util.Collections.emptyList();
      inlineDimensions_ = java.util.Collections.emptyList();
      last_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Observation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dimensionIndexes_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              dimensionIndexes_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                dimensionIndexes_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dimensionIndexes_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inlineDimensions_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement>();
                mutable_bitField0_ |= 0x00000002;
              }
              inlineDimensions_.add(
                  input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.parser(), extensionRegistry));
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 3;
              value_ = s;
              break;
            }
            case 33: {
              valueCase_ = 4;
              value_ = input.readDouble();
              break;
            }
            case 56: {

              last_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionIndexes_ = java.util.Collections.unmodifiableList(dimensionIndexes_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inlineDimensions_ = java.util.Collections.unmodifiableList(inlineDimensions_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Observation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Observation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.Builder.class);
    }

    private int bitField0_;
    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      STRINGVALUE(3),
      NUMERICVALUE(4),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 3: return STRINGVALUE;
          case 4: return NUMERICVALUE;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int DIMENSIONINDEXES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> dimensionIndexes_;
    /**
     * <pre>
     * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
     * dimension along which observations are packed, if packing is used) and follows their
     * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
     * 'not present'.
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getDimensionIndexesList() {
      return dimensionIndexes_;
    }
    /**
     * <pre>
     * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
     * dimension along which observations are packed, if packing is used) and follows their
     * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
     * 'not present'.
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    public int getDimensionIndexesCount() {
      return dimensionIndexes_.size();
    }
    /**
     * <pre>
     * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
     * dimension along which observations are packed, if packing is used) and follows their
     * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
     * 'not present'.
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    public long getDimensionIndexes(int index) {
      return dimensionIndexes_.get(index);
    }
    private int dimensionIndexesMemoizedSerializedSize = -1;

    public static final int INLINEDIMENSIONS_FIELD_NUMBER = 2;
    private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> inlineDimensions_;
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> getInlineDimensionsList() {
      return inlineDimensions_;
    }
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
        getInlineDimensionsOrBuilderList() {
      return inlineDimensions_;
    }
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    public int getInlineDimensionsCount() {
      return inlineDimensions_.size();
    }
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getInlineDimensions(int index) {
      return inlineDimensions_.get(index);
    }
    /**
     * <pre>
     * A single element for each inline dimension, in the order used in the header.
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder getInlineDimensionsOrBuilder(
        int index) {
      return inlineDimensions_.get(index);
    }

    public static final int STRINGVALUE_FIELD_NUMBER = 3;
    /**
     * <code>optional string stringValue = 3;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = "";
      if (valueCase_ == 3) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 3) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string stringValue = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 3) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 3) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUMERICVALUE_FIELD_NUMBER = 4;
    /**
     * <code>optional double numericValue = 4;</code>
     */
    public double getNumericValue() {
      if (valueCase_ == 4) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }

    public static final int LAST_FIELD_NUMBER = 7;
    private boolean last_;
    /**
     * <pre>
     * Set to true on the last observation, the last observation is followed by a footer.
     * </pre>
     *
     * <code>optional bool last = 7;</code>
     */
    public boolean getLast() {
      return last_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimensionIndexesList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimensionIndexesMemoizedSerializedSize);
      }
      for (int i = 0; i < dimensionIndexes_.size(); i++) {
        output.writeInt64NoTag(dimensionIndexes_.get(i));
      }
      for (int i = 0; i < inlineDimensions_.size(); i++) {
        output.writeMessage(2, inlineDimensions_.get(i));
      }
      if (valueCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);
      }
      if (valueCase_ == 4) {
        output.writeDouble(
            4, (double)((java.lang.Double) value_));
      }
      if (last_ != false) {
        output.writeBool(7, last_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dimensionIndexes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dimensionIndexes_.get(i));
        }
        size += dataSize;
        if (!getDimensionIndexesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimensionIndexesMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < inlineDimensions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, inlineDimensions_.get(i));
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              4, (double)((java.lang.Double) value_));
      }
      if (last_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, last_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation) obj;

      boolean result = true;
      result = result && getDimensionIndexesList()
          .equals(other.getDimensionIndexesList());
      result = result && getInlineDimensionsList()
          .equals(other.getInlineDimensionsList());
      result = result && (getLast()
          == other.getLast());
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 3:
          result = result && getStringValue()
              .equals(other.getStringValue());
          break;
        case 4:
          result = result && (
              java.lang.Double.doubleToLongBits(getNumericValue())
              == java.lang.Double.doubleToLongBits(
                  other.getNumericValue()));
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getDimensionIndexesCount() > 0) {
        hash = (37 * hash) + DIMENSIONINDEXES_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionIndexesList().hashCode();
      }
      if (getInlineDimensionsCount() > 0) {
        hash = (37 * hash) + INLINEDIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInlineDimensionsList().hashCode();
      }
      hash = (37 * hash) + LAST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLast());
      switch (valueCase_) {
        case 3:
          hash = (37 * hash) + STRINGVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getStringValue().hashCode();
          break;
        case 4:
          hash = (37 * hash) + NUMERICVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getNumericValue()));
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hypercube.Observation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.Observation)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.ObservationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Observation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Observation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInlineDimensionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        dimensionIndexes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (inlineDimensionsBuilder_ == null) {
          inlineDimensions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          inlineDimensionsBuilder_.clear();
        }
        last_ = false;

        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Observation_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionIndexes_ = java.util.Collections.unmodifiableList(dimensionIndexes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dimensionIndexes_ = dimensionIndexes_;
        if (inlineDimensionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            inlineDimensions_ = java.util.Collections.unmodifiableList(inlineDimensions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.inlineDimensions_ = inlineDimensions_;
        } else {
          result.inlineDimensions_ = inlineDimensionsBuilder_.build();
        }
        if (valueCase_ == 3) {
          result.value_ = value_;
        }
        if (valueCase_ == 4) {
          result.value_ = value_;
        }
        result.last_ = last_;
        result.bitField0_ = to_bitField0_;
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation.getDefaultInstance()) return this;
        if (!other.dimensionIndexes_.isEmpty()) {
          if (dimensionIndexes_.isEmpty()) {
            dimensionIndexes_ = other.dimensionIndexes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimensionIndexesIsMutable();
            dimensionIndexes_.addAll(other.dimensionIndexes_);
          }
          onChanged();
        }
        if (inlineDimensionsBuilder_ == null) {
          if (!other.inlineDimensions_.isEmpty()) {
            if (inlineDimensions_.isEmpty()) {
              inlineDimensions_ = other.inlineDimensions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInlineDimensionsIsMutable();
              inlineDimensions_.addAll(other.inlineDimensions_);
            }
            onChanged();
          }
        } else {
          if (!other.inlineDimensions_.isEmpty()) {
            if (inlineDimensionsBuilder_.isEmpty()) {
              inlineDimensionsBuilder_.dispose();
              inlineDimensionsBuilder_ = null;
              inlineDimensions_ = other.inlineDimensions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              inlineDimensionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInlineDimensionsFieldBuilder() : null;
            } else {
              inlineDimensionsBuilder_.addAllMessages(other.inlineDimensions_);
            }
          }
        }
        if (other.getLast() != false) {
          setLast(other.getLast());
        }
        switch (other.getValueCase()) {
          case STRINGVALUE: {
            valueCase_ = 3;
            value_ = other.value_;
            onChanged();
            break;
          }
          case NUMERICVALUE: {
            setNumericValue(other.getNumericValue());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.util.List<java.lang.Long> dimensionIndexes_ = java.util.Collections.emptyList();
      private void ensureDimensionIndexesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionIndexes_ = new java.util.ArrayList<java.lang.Long>(dimensionIndexes_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
       * dimension along which observations are packed, if packing is used) and follows their
       * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
       * 'not present'.
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getDimensionIndexesList() {
        return java.util.Collections.unmodifiableList(dimensionIndexes_);
      }
      /**
       * <pre>
       * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
       * dimension along which observations are packed, if packing is used) and follows their
       * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
       * 'not present'.
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public int getDimensionIndexesCount() {
        return dimensionIndexes_.size();
      }
      /**
       * <pre>
       * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
       * dimension along which observations are packed, if packing is used) and follows their
       * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
       * 'not present'.
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public long getDimensionIndexes(int index) {
        return dimensionIndexes_.get(index);
      }
      /**
       * <pre>
       * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
       * dimension along which observations are packed, if packing is used) and follows their
       * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
       * 'not present'.
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder setDimensionIndexes(
          int index, long value) {
        ensureDimensionIndexesIsMutable();
        dimensionIndexes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
       * dimension along which observations are packed, if packing is used) and follows their
       * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
       * 'not present'.
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder addDimensionIndexes(long value) {
        ensureDimensionIndexesIsMutable();
        dimensionIndexes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
       * dimension along which observations are packed, if packing is used) and follows their
       * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
       * 'not present'.
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder addAllDimensionIndexes(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDimensionIndexesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dimensionIndexes_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This list of dimensionIndexes has the same length as the number of dense dimensionDeclarations (excluding the
       * dimension along which observations are packed, if packing is used) and follows their
       * order. The value is the index into the dimElementField value. The index should be 1-based to reserve the 0 for
       * 'not present'.
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder clearDimensionIndexes() {
        dimensionIndexes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> inlineDimensions_ =
        java.util.Collections.emptyList();
      private void ensureInlineDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inlineDimensions_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement>(inlineDimensions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> inlineDimensionsBuilder_;

      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> getInlineDimensionsList() {
        if (inlineDimensionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inlineDimensions_);
        } else {
          return inlineDimensionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public int getInlineDimensionsCount() {
        if (inlineDimensionsBuilder_ == null) {
          return inlineDimensions_.size();
        } else {
          return inlineDimensionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getInlineDimensions(int index) {
        if (inlineDimensionsBuilder_ == null) {
          return inlineDimensions_.get(index);
        } else {
          return inlineDimensionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder setInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement value) {
        if (inlineDimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.set(index, value);
          onChanged();
        } else {
          inlineDimensionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder setInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder builderForValue) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.set(index, builderForValue.build());
          onChanged();
        } else {
          inlineDimensionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement value) {
        if (inlineDimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(value);
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement value) {
        if (inlineDimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(index, value);
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder builderForValue) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(builderForValue.build());
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder builderForValue) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(index, builderForValue.build());
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder addAllInlineDimensions(
          java.lang.Iterable<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> values) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inlineDimensions_);
          onChanged();
        } else {
          inlineDimensionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder clearInlineDimensions() {
        if (inlineDimensionsBuilder_ == null) {
          inlineDimensions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          inlineDimensionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public Builder removeInlineDimensions(int index) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.remove(index);
          onChanged();
        } else {
          inlineDimensionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder getInlineDimensionsBuilder(
          int index) {
        return getInlineDimensionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder getInlineDimensionsOrBuilder(
          int index) {
        if (inlineDimensionsBuilder_ == null) {
          return inlineDimensions_.get(index);  } else {
          return inlineDimensionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
           getInlineDimensionsOrBuilderList() {
        if (inlineDimensionsBuilder_ != null) {
          return inlineDimensionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inlineDimensions_);
        }
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder addInlineDimensionsBuilder() {
        return getInlineDimensionsFieldBuilder().addBuilder(
            org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.getDefaultInstance());
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder addInlineDimensionsBuilder(
          int index) {
        return getInlineDimensionsFieldBuilder().addBuilder(
            index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.getDefaultInstance());
      }
      /**
       * <pre>
       * A single element for each inline dimension, in the order used in the header.
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement inlineDimensions = 2;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder> 
           getInlineDimensionsBuilderList() {
        return getInlineDimensionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
          getInlineDimensionsFieldBuilder() {
        if (inlineDimensionsBuilder_ == null) {
          inlineDimensionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder>(
                  inlineDimensions_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          inlineDimensions_ = null;
        }
        return inlineDimensionsBuilder_;
      }

      /**
       * <code>optional string stringValue = 3;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = "";
        if (valueCase_ == 3) {
          ref = value_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valueCase_ == 3) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stringValue = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = "";
        if (valueCase_ == 3) {
          ref = value_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueCase_ == 3) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stringValue = 3;</code>
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 3;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringValue = 3;</code>
       */
      public Builder clearStringValue() {
        if (valueCase_ == 3) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional string stringValue = 3;</code>
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        valueCase_ = 3;
        value_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional double numericValue = 4;</code>
       */
      public double getNumericValue() {
        if (valueCase_ == 4) {
          return (java.lang.Double) value_;
        }
        return 0D;
      }
      /**
       * <code>optional double numericValue = 4;</code>
       */
      public Builder setNumericValue(double value) {
        valueCase_ = 4;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double numericValue = 4;</code>
       */
      public Builder clearNumericValue() {
        if (valueCase_ == 4) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      private boolean last_ ;
      /**
       * <pre>
       * Set to true on the last observation, the last observation is followed by a footer.
       * </pre>
       *
       * <code>optional bool last = 7;</code>
       */
      public boolean getLast() {
        return last_;
      }
      /**
       * <pre>
       * Set to true on the last observation, the last observation is followed by a footer.
       * </pre>
       *
       * <code>optional bool last = 7;</code>
       */
      public Builder setLast(boolean value) {
        
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set to true on the last observation, the last observation is followed by a footer.
       * </pre>
       *
       * <code>optional bool last = 7;</code>
       */
      public Builder clearLast() {
        
        last_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.Observation)
    }

    // @@protoc_insertion_point(class_scope:hypercube.Observation)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Observation>
        PARSER = new com.google.protobuf.AbstractParser<Observation>() {
      public Observation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Observation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Observation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Observation> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Observation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PackedObservationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.PackedObservation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * same as in observation
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    java.util.List<java.lang.Long> getDimensionIndexesList();
    /**
     * <pre>
     * same as in observation
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    int getDimensionIndexesCount();
    /**
     * <pre>
     * same as in observation
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    long getDimensionIndexes(int index);

    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> 
        getInlineDimensionsList();
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getInlineDimensions(int index);
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    int getInlineDimensionsCount();
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
        getInlineDimensionsOrBuilderList();
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getInlineDimensionsOrBuilder(
        int index);

    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    java.util.List<java.lang.String>
        getStringValuesList();
    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    int getStringValuesCount();
    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    java.lang.String getStringValues(int index);
    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    com.google.protobuf.ByteString
        getStringValuesBytes(int index);

    /**
     * <code>repeated double numericValues = 4;</code>
     */
    java.util.List<java.lang.Double> getNumericValuesList();
    /**
     * <code>repeated double numericValues = 4;</code>
     */
    int getNumericValuesCount();
    /**
     * <code>repeated double numericValues = 4;</code>
     */
    double getNumericValues(int index);

    /**
     * <pre>
     * The number of entries in either stringValues or numericValues, i.e., the number of observations represented
     * by this message.
     * </pre>
     *
     * <code>optional int32 numObervations = 5;</code>
     */
    int getNumObervations();

    /**
     * <pre>
     * default: false
     * </pre>
     *
     * <code>optional bool last = 7;</code>
     */
    boolean getLast();
  }
  /**
   * Protobuf type {@code hypercube.PackedObservation}
   */
  public  static final class PackedObservation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.PackedObservation)
      PackedObservationOrBuilder {
    // Use PackedObservation.newBuilder() to construct.
    private PackedObservation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PackedObservation() {
      dimensionIndexes_ = java.util.Collections.emptyList();
      inlineDimensions_ = java.util.Collections.emptyList();
      stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      numericValues_ = java.util.Collections.emptyList();
      numObervations_ = 0;
      last_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PackedObservation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dimensionIndexes_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              dimensionIndexes_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                dimensionIndexes_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                dimensionIndexes_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inlineDimensions_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements>();
                mutable_bitField0_ |= 0x00000002;
              }
              inlineDimensions_.add(
                  input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.parser(), extensionRegistry));
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                stringValues_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              stringValues_.add(s);
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                numericValues_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              numericValues_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                numericValues_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                numericValues_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {

              numObervations_ = input.readInt32();
              break;
            }
            case 56: {

              last_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionIndexes_ = java.util.Collections.unmodifiableList(dimensionIndexes_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inlineDimensions_ = java.util.Collections.unmodifiableList(inlineDimensions_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          stringValues_ = stringValues_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          numericValues_ = java.util.Collections.unmodifiableList(numericValues_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_PackedObservation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_PackedObservation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation.Builder.class);
    }

    private int bitField0_;
    public static final int DIMENSIONINDEXES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> dimensionIndexes_;
    /**
     * <pre>
     * same as in observation
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getDimensionIndexesList() {
      return dimensionIndexes_;
    }
    /**
     * <pre>
     * same as in observation
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    public int getDimensionIndexesCount() {
      return dimensionIndexes_.size();
    }
    /**
     * <pre>
     * same as in observation
     * </pre>
     *
     * <code>repeated int64 dimensionIndexes = 1;</code>
     */
    public long getDimensionIndexes(int index) {
      return dimensionIndexes_.get(index);
    }
    private int dimensionIndexesMemoizedSerializedSize = -1;

    public static final int INLINEDIMENSIONS_FIELD_NUMBER = 2;
    private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> inlineDimensions_;
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> getInlineDimensionsList() {
      return inlineDimensions_;
    }
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
        getInlineDimensionsOrBuilderList() {
      return inlineDimensions_;
    }
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    public int getInlineDimensionsCount() {
      return inlineDimensions_.size();
    }
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getInlineDimensions(int index) {
      return inlineDimensions_.get(index);
    }
    /**
     * <pre>
     * A dimension element for each observation for each inline dimension
     * The perSample flag indicates if there is one element for each sample, or only one element for each group of
     * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
     * can be multiple samples per patient).
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getInlineDimensionsOrBuilder(
        int index) {
      return inlineDimensions_.get(index);
    }

    public static final int STRINGVALUES_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList stringValues_;
    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStringValuesList() {
      return stringValues_;
    }
    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    public int getStringValuesCount() {
      return stringValues_.size();
    }
    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    public java.lang.String getStringValues(int index) {
      return stringValues_.get(index);
    }
    /**
     * <pre>
     * Only one of these must be set
     * This list are the observation values. If there are multiple samples this list can be longer than the number of
     * elements in the packed dimension.
     * </pre>
     *
     * <code>repeated string stringValues = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStringValuesBytes(int index) {
      return stringValues_.getByteString(index);
    }

    public static final int NUMERICVALUES_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> numericValues_;
    /**
     * <code>repeated double numericValues = 4;</code>
     */
    public java.util.List<java.lang.Double>
        getNumericValuesList() {
      return numericValues_;
    }
    /**
     * <code>repeated double numericValues = 4;</code>
     */
    public int getNumericValuesCount() {
      return numericValues_.size();
    }
    /**
     * <code>repeated double numericValues = 4;</code>
     */
    public double getNumericValues(int index) {
      return numericValues_.get(index);
    }
    private int numericValuesMemoizedSerializedSize = -1;

    public static final int NUMOBERVATIONS_FIELD_NUMBER = 5;
    private int numObervations_;
    /**
     * <pre>
     * The number of entries in either stringValues or numericValues, i.e., the number of observations represented
     * by this message.
     * </pre>
     *
     * <code>optional int32 numObervations = 5;</code>
     */
    public int getNumObervations() {
      return numObervations_;
    }

    public static final int LAST_FIELD_NUMBER = 7;
    private boolean last_;
    /**
     * <pre>
     * default: false
     * </pre>
     *
     * <code>optional bool last = 7;</code>
     */
    public boolean getLast() {
      return last_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimensionIndexesList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimensionIndexesMemoizedSerializedSize);
      }
      for (int i = 0; i < dimensionIndexes_.size(); i++) {
        output.writeInt64NoTag(dimensionIndexes_.get(i));
      }
      for (int i = 0; i < inlineDimensions_.size(); i++) {
        output.writeMessage(2, inlineDimensions_.get(i));
      }
      for (int i = 0; i < stringValues_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, stringValues_.getRaw(i));
      }
      if (getNumericValuesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(numericValuesMemoizedSerializedSize);
      }
      for (int i = 0; i < numericValues_.size(); i++) {
        output.writeDoubleNoTag(numericValues_.get(i));
      }
      if (numObervations_ != 0) {
        output.writeInt32(5, numObervations_);
      }
      if (last_ != false) {
        output.writeBool(7, last_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dimensionIndexes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dimensionIndexes_.get(i));
        }
        size += dataSize;
        if (!getDimensionIndexesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimensionIndexesMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < inlineDimensions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, inlineDimensions_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < stringValues_.size(); i++) {
          dataSize += computeStringSizeNoTag(stringValues_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStringValuesList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getNumericValuesList().size();
        size += dataSize;
        if (!getNumericValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        numericValuesMemoizedSerializedSize = dataSize;
      }
      if (numObervations_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, numObervations_);
      }
      if (last_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, last_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation) obj;

      boolean result = true;
      result = result && getDimensionIndexesList()
          .equals(other.getDimensionIndexesList());
      result = result && getInlineDimensionsList()
          .equals(other.getInlineDimensionsList());
      result = result && getStringValuesList()
          .equals(other.getStringValuesList());
      result = result && getNumericValuesList()
          .equals(other.getNumericValuesList());
      result = result && (getNumObervations()
          == other.getNumObervations());
      result = result && (getLast()
          == other.getLast());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getDimensionIndexesCount() > 0) {
        hash = (37 * hash) + DIMENSIONINDEXES_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionIndexesList().hashCode();
      }
      if (getInlineDimensionsCount() > 0) {
        hash = (37 * hash) + INLINEDIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInlineDimensionsList().hashCode();
      }
      if (getStringValuesCount() > 0) {
        hash = (37 * hash) + STRINGVALUES_FIELD_NUMBER;
        hash = (53 * hash) + getStringValuesList().hashCode();
      }
      if (getNumericValuesCount() > 0) {
        hash = (37 * hash) + NUMERICVALUES_FIELD_NUMBER;
        hash = (53 * hash) + getNumericValuesList().hashCode();
      }
      hash = (37 * hash) + NUMOBERVATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getNumObervations();
      hash = (37 * hash) + LAST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLast());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hypercube.PackedObservation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.PackedObservation)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_PackedObservation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_PackedObservation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInlineDimensionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        dimensionIndexes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (inlineDimensionsBuilder_ == null) {
          inlineDimensions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          inlineDimensionsBuilder_.clear();
        }
        stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        numericValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        numObervations_ = 0;

        last_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_PackedObservation_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionIndexes_ = java.util.Collections.unmodifiableList(dimensionIndexes_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dimensionIndexes_ = dimensionIndexes_;
        if (inlineDimensionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            inlineDimensions_ = java.util.Collections.unmodifiableList(inlineDimensions_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.inlineDimensions_ = inlineDimensions_;
        } else {
          result.inlineDimensions_ = inlineDimensionsBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          stringValues_ = stringValues_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.stringValues_ = stringValues_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          numericValues_ = java.util.Collections.unmodifiableList(numericValues_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.numericValues_ = numericValues_;
        result.numObervations_ = numObervations_;
        result.last_ = last_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation.getDefaultInstance()) return this;
        if (!other.dimensionIndexes_.isEmpty()) {
          if (dimensionIndexes_.isEmpty()) {
            dimensionIndexes_ = other.dimensionIndexes_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimensionIndexesIsMutable();
            dimensionIndexes_.addAll(other.dimensionIndexes_);
          }
          onChanged();
        }
        if (inlineDimensionsBuilder_ == null) {
          if (!other.inlineDimensions_.isEmpty()) {
            if (inlineDimensions_.isEmpty()) {
              inlineDimensions_ = other.inlineDimensions_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInlineDimensionsIsMutable();
              inlineDimensions_.addAll(other.inlineDimensions_);
            }
            onChanged();
          }
        } else {
          if (!other.inlineDimensions_.isEmpty()) {
            if (inlineDimensionsBuilder_.isEmpty()) {
              inlineDimensionsBuilder_.dispose();
              inlineDimensionsBuilder_ = null;
              inlineDimensions_ = other.inlineDimensions_;
              bitField0_ = (bitField0_ & ~0x00000002);
              inlineDimensionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInlineDimensionsFieldBuilder() : null;
            } else {
              inlineDimensionsBuilder_.addAllMessages(other.inlineDimensions_);
            }
          }
        }
        if (!other.stringValues_.isEmpty()) {
          if (stringValues_.isEmpty()) {
            stringValues_ = other.stringValues_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStringValuesIsMutable();
            stringValues_.addAll(other.stringValues_);
          }
          onChanged();
        }
        if (!other.numericValues_.isEmpty()) {
          if (numericValues_.isEmpty()) {
            numericValues_ = other.numericValues_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureNumericValuesIsMutable();
            numericValues_.addAll(other.numericValues_);
          }
          onChanged();
        }
        if (other.getNumObervations() != 0) {
          setNumObervations(other.getNumObervations());
        }
        if (other.getLast() != false) {
          setLast(other.getLast());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> dimensionIndexes_ = java.util.Collections.emptyList();
      private void ensureDimensionIndexesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dimensionIndexes_ = new java.util.ArrayList<java.lang.Long>(dimensionIndexes_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * same as in observation
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getDimensionIndexesList() {
        return java.util.Collections.unmodifiableList(dimensionIndexes_);
      }
      /**
       * <pre>
       * same as in observation
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public int getDimensionIndexesCount() {
        return dimensionIndexes_.size();
      }
      /**
       * <pre>
       * same as in observation
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public long getDimensionIndexes(int index) {
        return dimensionIndexes_.get(index);
      }
      /**
       * <pre>
       * same as in observation
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder setDimensionIndexes(
          int index, long value) {
        ensureDimensionIndexesIsMutable();
        dimensionIndexes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * same as in observation
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder addDimensionIndexes(long value) {
        ensureDimensionIndexesIsMutable();
        dimensionIndexes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * same as in observation
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder addAllDimensionIndexes(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDimensionIndexesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dimensionIndexes_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * same as in observation
       * </pre>
       *
       * <code>repeated int64 dimensionIndexes = 1;</code>
       */
      public Builder clearDimensionIndexes() {
        dimensionIndexes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> inlineDimensions_ =
        java.util.Collections.emptyList();
      private void ensureInlineDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inlineDimensions_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements>(inlineDimensions_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> inlineDimensionsBuilder_;

      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> getInlineDimensionsList() {
        if (inlineDimensionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inlineDimensions_);
        } else {
          return inlineDimensionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public int getInlineDimensionsCount() {
        if (inlineDimensionsBuilder_ == null) {
          return inlineDimensions_.size();
        } else {
          return inlineDimensionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getInlineDimensions(int index) {
        if (inlineDimensionsBuilder_ == null) {
          return inlineDimensions_.get(index);
        } else {
          return inlineDimensionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder setInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (inlineDimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.set(index, value);
          onChanged();
        } else {
          inlineDimensionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder setInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder builderForValue) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.set(index, builderForValue.build());
          onChanged();
        } else {
          inlineDimensionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (inlineDimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(value);
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (inlineDimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(index, value);
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder builderForValue) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(builderForValue.build());
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder addInlineDimensions(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder builderForValue) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.add(index, builderForValue.build());
          onChanged();
        } else {
          inlineDimensionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder addAllInlineDimensions(
          java.lang.Iterable<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> values) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inlineDimensions_);
          onChanged();
        } else {
          inlineDimensionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder clearInlineDimensions() {
        if (inlineDimensionsBuilder_ == null) {
          inlineDimensions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          inlineDimensionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public Builder removeInlineDimensions(int index) {
        if (inlineDimensionsBuilder_ == null) {
          ensureInlineDimensionsIsMutable();
          inlineDimensions_.remove(index);
          onChanged();
        } else {
          inlineDimensionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder getInlineDimensionsBuilder(
          int index) {
        return getInlineDimensionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getInlineDimensionsOrBuilder(
          int index) {
        if (inlineDimensionsBuilder_ == null) {
          return inlineDimensions_.get(index);  } else {
          return inlineDimensionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
           getInlineDimensionsOrBuilderList() {
        if (inlineDimensionsBuilder_ != null) {
          return inlineDimensionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inlineDimensions_);
        }
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder addInlineDimensionsBuilder() {
        return getInlineDimensionsFieldBuilder().addBuilder(
            org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance());
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder addInlineDimensionsBuilder(
          int index) {
        return getInlineDimensionsFieldBuilder().addBuilder(
            index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance());
      }
      /**
       * <pre>
       * A dimension element for each observation for each inline dimension
       * The perSample flag indicates if there is one element for each sample, or only one element for each group of
       * samples corresponding to a single element of the packed dimension (e.g. one element per patient even though there
       * can be multiple samples per patient).
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements inlineDimensions = 2;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder> 
           getInlineDimensionsBuilderList() {
        return getInlineDimensionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
          getInlineDimensionsFieldBuilder() {
        if (inlineDimensionsBuilder_ == null) {
          inlineDimensionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder>(
                  inlineDimensions_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          inlineDimensions_ = null;
        }
        return inlineDimensionsBuilder_;
      }

      private com.google.protobuf.LazyStringList stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringValuesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          stringValues_ = new com.google.protobuf.LazyStringArrayList(stringValues_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStringValuesList() {
        return stringValues_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public int getStringValuesCount() {
        return stringValues_.size();
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public java.lang.String getStringValues(int index) {
        return stringValues_.get(index);
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStringValuesBytes(int index) {
        return stringValues_.getByteString(index);
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public Builder setStringValues(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
        stringValues_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public Builder addStringValues(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
        stringValues_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public Builder addAllStringValues(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringValues_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public Builder clearStringValues() {
        stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of these must be set
       * This list are the observation values. If there are multiple samples this list can be longer than the number of
       * elements in the packed dimension.
       * </pre>
       *
       * <code>repeated string stringValues = 3;</code>
       */
      public Builder addStringValuesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStringValuesIsMutable();
        stringValues_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> numericValues_ = java.util.Collections.emptyList();
      private void ensureNumericValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          numericValues_ = new java.util.ArrayList<java.lang.Double>(numericValues_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated double numericValues = 4;</code>
       */
      public java.util.List<java.lang.Double>
          getNumericValuesList() {
        return java.util.Collections.unmodifiableList(numericValues_);
      }
      /**
       * <code>repeated double numericValues = 4;</code>
       */
      public int getNumericValuesCount() {
        return numericValues_.size();
      }
      /**
       * <code>repeated double numericValues = 4;</code>
       */
      public double getNumericValues(int index) {
        return numericValues_.get(index);
      }
      /**
       * <code>repeated double numericValues = 4;</code>
       */
      public Builder setNumericValues(
          int index, double value) {
        ensureNumericValuesIsMutable();
        numericValues_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double numericValues = 4;</code>
       */
      public Builder addNumericValues(double value) {
        ensureNumericValuesIsMutable();
        numericValues_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double numericValues = 4;</code>
       */
      public Builder addAllNumericValues(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureNumericValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, numericValues_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double numericValues = 4;</code>
       */
      public Builder clearNumericValues() {
        numericValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private int numObervations_ ;
      /**
       * <pre>
       * The number of entries in either stringValues or numericValues, i.e., the number of observations represented
       * by this message.
       * </pre>
       *
       * <code>optional int32 numObervations = 5;</code>
       */
      public int getNumObervations() {
        return numObervations_;
      }
      /**
       * <pre>
       * The number of entries in either stringValues or numericValues, i.e., the number of observations represented
       * by this message.
       * </pre>
       *
       * <code>optional int32 numObervations = 5;</code>
       */
      public Builder setNumObervations(int value) {
        
        numObervations_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of entries in either stringValues or numericValues, i.e., the number of observations represented
       * by this message.
       * </pre>
       *
       * <code>optional int32 numObervations = 5;</code>
       */
      public Builder clearNumObervations() {
        
        numObervations_ = 0;
        onChanged();
        return this;
      }

      private boolean last_ ;
      /**
       * <pre>
       * default: false
       * </pre>
       *
       * <code>optional bool last = 7;</code>
       */
      public boolean getLast() {
        return last_;
      }
      /**
       * <pre>
       * default: false
       * </pre>
       *
       * <code>optional bool last = 7;</code>
       */
      public Builder setLast(boolean value) {
        
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * default: false
       * </pre>
       *
       * <code>optional bool last = 7;</code>
       */
      public Builder clearLast() {
        
        last_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.PackedObservation)
    }

    // @@protoc_insertion_point(class_scope:hypercube.PackedObservation)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PackedObservation>
        PARSER = new com.google.protobuf.AbstractParser<PackedObservation>() {
      public PackedObservation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PackedObservation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PackedObservation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PackedObservation> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.PackedObservation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DimensionElementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.DimensionElement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value> 
        getFieldsList();
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.Value getFields(int index);
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <code>optional sint64 intValue = 2;</code>
     */
    long getIntValue();

    /**
     * <code>optional double doubleValue = 3;</code>
     */
    double getDoubleValue();

    /**
     * <code>optional string stringValue = 4;</code>
     */
    java.lang.String getStringValue();
    /**
     * <code>optional string stringValue = 4;</code>
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>optional int64 timestampValue = 5;</code>
     */
    long getTimestampValue();
  }
  /**
   * <pre>
   * note: singular
   * </pre>
   *
   * Protobuf type {@code hypercube.DimensionElement}
   */
  public  static final class DimensionElement extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.DimensionElement)
      DimensionElementOrBuilder {
    // Use DimensionElement.newBuilder() to construct.
    private DimensionElement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DimensionElement() {
      fields_ = java.util.Collections.emptyList();
      intValue_ = 0L;
      doubleValue_ = 0D;
      stringValue_ = "";
      timestampValue_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DimensionElement(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fields_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value>();
                mutable_bitField0_ |= 0x00000001;
              }
              fields_.add(
                  input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.parser(), extensionRegistry));
              break;
            }
            case 16: {

              intValue_ = input.readSInt64();
              break;
            }
            case 25: {

              doubleValue_ = input.readDouble();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              stringValue_ = s;
              break;
            }
            case 40: {

              timestampValue_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElement_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDS_FIELD_NUMBER = 1;
    private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value> fields_;
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value> getFieldsList() {
      return fields_;
    }
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <pre>
     * Only one of these can be set. If this dimension element only has one field, use the
     * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
     * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
     * nested message for every observation.
     * </pre>
     *
     * <code>repeated .hypercube.Value fields = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int INTVALUE_FIELD_NUMBER = 2;
    private long intValue_;
    /**
     * <code>optional sint64 intValue = 2;</code>
     */
    public long getIntValue() {
      return intValue_;
    }

    public static final int DOUBLEVALUE_FIELD_NUMBER = 3;
    private double doubleValue_;
    /**
     * <code>optional double doubleValue = 3;</code>
     */
    public double getDoubleValue() {
      return doubleValue_;
    }

    public static final int STRINGVALUE_FIELD_NUMBER = 4;
    private volatile java.lang.Object stringValue_;
    /**
     * <code>optional string stringValue = 4;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringValue_ = s;
        return s;
      }
    }
    /**
     * <code>optional string stringValue = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMPVALUE_FIELD_NUMBER = 5;
    private long timestampValue_;
    /**
     * <code>optional int64 timestampValue = 5;</code>
     */
    public long getTimestampValue() {
      return timestampValue_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      if (intValue_ != 0L) {
        output.writeSInt64(2, intValue_);
      }
      if (doubleValue_ != 0D) {
        output.writeDouble(3, doubleValue_);
      }
      if (!getStringValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stringValue_);
      }
      if (timestampValue_ != 0L) {
        output.writeInt64(5, timestampValue_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      if (intValue_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(2, intValue_);
      }
      if (doubleValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, doubleValue_);
      }
      if (!getStringValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stringValue_);
      }
      if (timestampValue_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, timestampValue_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement) obj;

      boolean result = true;
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && (getIntValue()
          == other.getIntValue());
      result = result && (
          java.lang.Double.doubleToLongBits(getDoubleValue())
          == java.lang.Double.doubleToLongBits(
              other.getDoubleValue()));
      result = result && getStringValue()
          .equals(other.getStringValue());
      result = result && (getTimestampValue()
          == other.getTimestampValue());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (37 * hash) + INTVALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIntValue());
      hash = (37 * hash) + DOUBLEVALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleValue()));
      hash = (37 * hash) + STRINGVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getStringValue().hashCode();
      hash = (37 * hash) + TIMESTAMPVALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestampValue());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * note: singular
     * </pre>
     *
     * Protobuf type {@code hypercube.DimensionElement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.DimensionElement)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldsBuilder_.clear();
        }
        intValue_ = 0L;

        doubleValue_ = 0D;

        stringValue_ = "";

        timestampValue_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElement_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.intValue_ = intValue_;
        result.doubleValue_ = doubleValue_;
        result.stringValue_ = stringValue_;
        result.timestampValue_ = timestampValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.getDefaultInstance()) return this;
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (other.getIntValue() != 0L) {
          setIntValue(other.getIntValue());
        }
        if (other.getDoubleValue() != 0D) {
          setDoubleValue(other.getDoubleValue());
        }
        if (!other.getStringValue().isEmpty()) {
          stringValue_ = other.stringValue_;
          onChanged();
        }
        if (other.getTimestampValue() != 0L) {
          setTimestampValue(other.getTimestampValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fields_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value>(fields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.Value, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder> fieldsBuilder_;

      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder setFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder setFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder addFields(org.transmartproject.rest.hypercubeProto.ObservationsProto.Value value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder addFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder addFields(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder addFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.Value> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.getDefaultInstance());
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.getDefaultInstance());
      }
      /**
       * <pre>
       * Only one of these can be set. If this dimension element only has one field, use the
       * int/double/stringValues. If this dimension element has fields of multiple types, use 'fields'.
       * Having the optional fields as well is a size optimization, it avoids the overhead of a repeated field and a/
       * nested message for every observation.
       * </pre>
       *
       * <code>repeated .hypercube.Value fields = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.Value, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.Value, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private long intValue_ ;
      /**
       * <code>optional sint64 intValue = 2;</code>
       */
      public long getIntValue() {
        return intValue_;
      }
      /**
       * <code>optional sint64 intValue = 2;</code>
       */
      public Builder setIntValue(long value) {
        
        intValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 intValue = 2;</code>
       */
      public Builder clearIntValue() {
        
        intValue_ = 0L;
        onChanged();
        return this;
      }

      private double doubleValue_ ;
      /**
       * <code>optional double doubleValue = 3;</code>
       */
      public double getDoubleValue() {
        return doubleValue_;
      }
      /**
       * <code>optional double doubleValue = 3;</code>
       */
      public Builder setDoubleValue(double value) {
        
        doubleValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double doubleValue = 3;</code>
       */
      public Builder clearDoubleValue() {
        
        doubleValue_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object stringValue_ = "";
      /**
       * <code>optional string stringValue = 4;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stringValue = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stringValue = 4;</code>
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stringValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringValue = 4;</code>
       */
      public Builder clearStringValue() {
        
        stringValue_ = getDefaultInstance().getStringValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringValue = 4;</code>
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stringValue_ = value;
        onChanged();
        return this;
      }

      private long timestampValue_ ;
      /**
       * <code>optional int64 timestampValue = 5;</code>
       */
      public long getTimestampValue() {
        return timestampValue_;
      }
      /**
       * <code>optional int64 timestampValue = 5;</code>
       */
      public Builder setTimestampValue(long value) {
        
        timestampValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestampValue = 5;</code>
       */
      public Builder clearTimestampValue() {
        
        timestampValue_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.DimensionElement)
    }

    // @@protoc_insertion_point(class_scope:hypercube.DimensionElement)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DimensionElement>
        PARSER = new com.google.protobuf.AbstractParser<DimensionElement>() {
      public DimensionElement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DimensionElement(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DimensionElement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DimensionElement> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.Value)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string stringValue = 1;</code>
     */
    java.lang.String getStringValue();
    /**
     * <code>optional string stringValue = 1;</code>
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>optional double doubleValue = 2;</code>
     */
    double getDoubleValue();

    /**
     * <code>optional sint64 intValue = 3;</code>
     */
    long getIntValue();

    /**
     * <code>optional int64 timestampValue = 4;</code>
     */
    long getTimestampValue();

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code hypercube.Value}
   */
  public  static final class Value extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.Value)
      ValueOrBuilder {
    // Use Value.newBuilder() to construct.
    private Value(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Value() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Value(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 1;
              value_ = s;
              break;
            }
            case 17: {
              valueCase_ = 2;
              value_ = input.readDouble();
              break;
            }
            case 24: {
              valueCase_ = 3;
              value_ = input.readSInt64();
              break;
            }
            case 32: {
              valueCase_ = 4;
              value_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Value_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Value_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      STRINGVALUE(1),
      DOUBLEVALUE(2),
      INTVALUE(3),
      TIMESTAMPVALUE(4),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return STRINGVALUE;
          case 2: return DOUBLEVALUE;
          case 3: return INTVALUE;
          case 4: return TIMESTAMPVALUE;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int STRINGVALUE_FIELD_NUMBER = 1;
    /**
     * <code>optional string stringValue = 1;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = "";
      if (valueCase_ == 1) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 1) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string stringValue = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 1) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 1) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOUBLEVALUE_FIELD_NUMBER = 2;
    /**
     * <code>optional double doubleValue = 2;</code>
     */
    public double getDoubleValue() {
      if (valueCase_ == 2) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }

    public static final int INTVALUE_FIELD_NUMBER = 3;
    /**
     * <code>optional sint64 intValue = 3;</code>
     */
    public long getIntValue() {
      if (valueCase_ == 3) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    public static final int TIMESTAMPVALUE_FIELD_NUMBER = 4;
    /**
     * <code>optional int64 timestampValue = 4;</code>
     */
    public long getTimestampValue() {
      if (valueCase_ == 4) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, value_);
      }
      if (valueCase_ == 2) {
        output.writeDouble(
            2, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 3) {
        output.writeSInt64(
            3, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 4) {
        output.writeInt64(
            4, (long)((java.lang.Long) value_));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, value_);
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              2, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(
              3, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              4, (long)((java.lang.Long) value_));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Value)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.Value other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Value) obj;

      boolean result = true;
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 1:
          result = result && getStringValue()
              .equals(other.getStringValue());
          break;
        case 2:
          result = result && (
              java.lang.Double.doubleToLongBits(getDoubleValue())
              == java.lang.Double.doubleToLongBits(
                  other.getDoubleValue()));
          break;
        case 3:
          result = result && (getIntValue()
              == other.getIntValue());
          break;
        case 4:
          result = result && (getTimestampValue()
              == other.getTimestampValue());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      switch (valueCase_) {
        case 1:
          hash = (37 * hash) + STRINGVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getStringValue().hashCode();
          break;
        case 2:
          hash = (37 * hash) + DOUBLEVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDoubleValue()));
          break;
        case 3:
          hash = (37 * hash) + INTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getIntValue());
          break;
        case 4:
          hash = (37 * hash) + TIMESTAMPVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTimestampValue());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.Value prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hypercube.Value}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.Value)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.ValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Value_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Value_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Value_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Value result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Value result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Value(this);
        if (valueCase_ == 1) {
          result.value_ = value_;
        }
        if (valueCase_ == 2) {
          result.value_ = value_;
        }
        if (valueCase_ == 3) {
          result.value_ = value_;
        }
        if (valueCase_ == 4) {
          result.value_ = value_;
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Value) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.Value)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.Value other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.Value.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case STRINGVALUE: {
            valueCase_ = 1;
            value_ = other.value_;
            onChanged();
            break;
          }
          case DOUBLEVALUE: {
            setDoubleValue(other.getDoubleValue());
            break;
          }
          case INTVALUE: {
            setIntValue(other.getIntValue());
            break;
          }
          case TIMESTAMPVALUE: {
            setTimestampValue(other.getTimestampValue());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Value parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Value) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>optional string stringValue = 1;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = "";
        if (valueCase_ == 1) {
          ref = value_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valueCase_ == 1) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stringValue = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = "";
        if (valueCase_ == 1) {
          ref = value_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueCase_ == 1) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stringValue = 1;</code>
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 1;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringValue = 1;</code>
       */
      public Builder clearStringValue() {
        if (valueCase_ == 1) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional string stringValue = 1;</code>
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        valueCase_ = 1;
        value_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional double doubleValue = 2;</code>
       */
      public double getDoubleValue() {
        if (valueCase_ == 2) {
          return (java.lang.Double) value_;
        }
        return 0D;
      }
      /**
       * <code>optional double doubleValue = 2;</code>
       */
      public Builder setDoubleValue(double value) {
        valueCase_ = 2;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double doubleValue = 2;</code>
       */
      public Builder clearDoubleValue() {
        if (valueCase_ == 2) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional sint64 intValue = 3;</code>
       */
      public long getIntValue() {
        if (valueCase_ == 3) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <code>optional sint64 intValue = 3;</code>
       */
      public Builder setIntValue(long value) {
        valueCase_ = 3;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 intValue = 3;</code>
       */
      public Builder clearIntValue() {
        if (valueCase_ == 3) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>optional int64 timestampValue = 4;</code>
       */
      public long getTimestampValue() {
        if (valueCase_ == 4) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <code>optional int64 timestampValue = 4;</code>
       */
      public Builder setTimestampValue(long value) {
        valueCase_ = 4;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestampValue = 4;</code>
       */
      public Builder clearTimestampValue() {
        if (valueCase_ == 4) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.Value)
    }

    // @@protoc_insertion_point(class_scope:hypercube.Value)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.Value DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Value();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Value getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Value>
        PARSER = new com.google.protobuf.AbstractParser<Value>() {
      public Value parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Value(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Value> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Value> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Value getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FooterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.Footer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> 
        getDimensionList();
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getDimension(int index);
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    int getDimensionCount();
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
        getDimensionOrBuilderList();
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getDimensionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code hypercube.Footer}
   */
  public  static final class Footer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.Footer)
      FooterOrBuilder {
    // Use Footer.newBuilder() to construct.
    private Footer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Footer() {
      dimension_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Footer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dimension_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements>();
                mutable_bitField0_ |= 0x00000001;
              }
              dimension_.add(
                  input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dimension_ = java.util.Collections.unmodifiableList(dimension_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Footer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Footer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer.Builder.class);
    }

    public static final int DIMENSION_FIELD_NUMBER = 1;
    private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> dimension_;
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> getDimensionList() {
      return dimension_;
    }
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
        getDimensionOrBuilderList() {
      return dimension_;
    }
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    public int getDimensionCount() {
      return dimension_.size();
    }
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getDimension(int index) {
      return dimension_.get(index);
    }
    /**
     * <pre>
     * List of dimensions (e.g. patients, concepts, trialVisits, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getDimensionOrBuilder(
        int index) {
      return dimension_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dimension_.size(); i++) {
        output.writeMessage(1, dimension_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dimension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dimension_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer) obj;

      boolean result = true;
      result = result && getDimensionList()
          .equals(other.getDimensionList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getDimensionCount() > 0) {
        hash = (37 * hash) + DIMENSION_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code hypercube.Footer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.Footer)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.FooterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Footer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Footer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDimensionFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (dimensionBuilder_ == null) {
          dimension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dimensionBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_Footer_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer(this);
        int from_bitField0_ = bitField0_;
        if (dimensionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dimension_ = java.util.Collections.unmodifiableList(dimension_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dimension_ = dimension_;
        } else {
          result.dimension_ = dimensionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer.getDefaultInstance()) return this;
        if (dimensionBuilder_ == null) {
          if (!other.dimension_.isEmpty()) {
            if (dimension_.isEmpty()) {
              dimension_ = other.dimension_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDimensionIsMutable();
              dimension_.addAll(other.dimension_);
            }
            onChanged();
          }
        } else {
          if (!other.dimension_.isEmpty()) {
            if (dimensionBuilder_.isEmpty()) {
              dimensionBuilder_.dispose();
              dimensionBuilder_ = null;
              dimension_ = other.dimension_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dimensionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDimensionFieldBuilder() : null;
            } else {
              dimensionBuilder_.addAllMessages(other.dimension_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> dimension_ =
        java.util.Collections.emptyList();
      private void ensureDimensionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dimension_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements>(dimension_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> dimensionBuilder_;

      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> getDimensionList() {
        if (dimensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dimension_);
        } else {
          return dimensionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public int getDimensionCount() {
        if (dimensionBuilder_ == null) {
          return dimension_.size();
        } else {
          return dimensionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getDimension(int index) {
        if (dimensionBuilder_ == null) {
          return dimension_.get(index);
        } else {
          return dimensionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder setDimension(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (dimensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionIsMutable();
          dimension_.set(index, value);
          onChanged();
        } else {
          dimensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder setDimension(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder builderForValue) {
        if (dimensionBuilder_ == null) {
          ensureDimensionIsMutable();
          dimension_.set(index, builderForValue.build());
          onChanged();
        } else {
          dimensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder addDimension(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (dimensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionIsMutable();
          dimension_.add(value);
          onChanged();
        } else {
          dimensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder addDimension(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements value) {
        if (dimensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionIsMutable();
          dimension_.add(index, value);
          onChanged();
        } else {
          dimensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder addDimension(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder builderForValue) {
        if (dimensionBuilder_ == null) {
          ensureDimensionIsMutable();
          dimension_.add(builderForValue.build());
          onChanged();
        } else {
          dimensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder addDimension(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder builderForValue) {
        if (dimensionBuilder_ == null) {
          ensureDimensionIsMutable();
          dimension_.add(index, builderForValue.build());
          onChanged();
        } else {
          dimensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder addAllDimension(
          java.lang.Iterable<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements> values) {
        if (dimensionBuilder_ == null) {
          ensureDimensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dimension_);
          onChanged();
        } else {
          dimensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder clearDimension() {
        if (dimensionBuilder_ == null) {
          dimension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dimensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public Builder removeDimension(int index) {
        if (dimensionBuilder_ == null) {
          ensureDimensionIsMutable();
          dimension_.remove(index);
          onChanged();
        } else {
          dimensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder getDimensionBuilder(
          int index) {
        return getDimensionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder getDimensionOrBuilder(
          int index) {
        if (dimensionBuilder_ == null) {
          return dimension_.get(index);  } else {
          return dimensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
           getDimensionOrBuilderList() {
        if (dimensionBuilder_ != null) {
          return dimensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dimension_);
        }
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder addDimensionBuilder() {
        return getDimensionFieldBuilder().addBuilder(
            org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance());
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder addDimensionBuilder(
          int index) {
        return getDimensionFieldBuilder().addBuilder(
            index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance());
      }
      /**
       * <pre>
       * List of dimensions (e.g. patients, concepts, trialVisits, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElements dimension = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder> 
           getDimensionBuilderList() {
        return getDimensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder> 
          getDimensionFieldBuilder() {
        if (dimensionBuilder_ == null) {
          dimensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder>(
                  dimension_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dimension_ = null;
        }
        return dimensionBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.Footer)
    }

    // @@protoc_insertion_point(class_scope:hypercube.Footer)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Footer>
        PARSER = new com.google.protobuf.AbstractParser<Footer>() {
      public Footer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Footer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Footer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Footer> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.Footer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DimensionElementsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:hypercube.DimensionElements)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> 
        getFieldsList();
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getFields(int index);
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <pre>
     * only used when this message is embedded in a packedObservations
     * </pre>
     *
     * <code>optional bool perSample = 2;</code>
     */
    boolean getPerSample();
  }
  /**
   * <pre>
   * note: plural
   * </pre>
   *
   * Protobuf type {@code hypercube.DimensionElements}
   */
  public  static final class DimensionElements extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:hypercube.DimensionElements)
      DimensionElementsOrBuilder {
    // Use DimensionElements.newBuilder() to construct.
    private DimensionElements(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DimensionElements() {
      name_ = "";
      fields_ = java.util.Collections.emptyList();
      perSample_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DimensionElements(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fields_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement>();
                mutable_bitField0_ |= 0x00000002;
              }
              fields_.add(
                  input.readMessage(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.parser(), extensionRegistry));
              break;
            }
            case 16: {

              perSample_ = input.readBool();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElements_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElements_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 1;
    private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> fields_;
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> getFieldsList() {
      return fields_;
    }
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <pre>
     * List of dimension elements field values (e.g. values for age, values for gender, etc)
     * </pre>
     *
     * <code>repeated .hypercube.DimensionElement fields = 1;</code>
     */
    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int PERSAMPLE_FIELD_NUMBER = 2;
    private boolean perSample_;
    /**
     * <pre>
     * only used when this message is embedded in a packedObservations
     * </pre>
     *
     * <code>optional bool perSample = 2;</code>
     */
    public boolean getPerSample() {
      return perSample_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      if (perSample_ != false) {
        output.writeBool(2, perSample_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      if (perSample_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, perSample_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements)) {
        return super.equals(obj);
      }
      org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements other = (org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getFieldsList()
          .equals(other.getFieldsList());
      result = result && (getPerSample()
          == other.getPerSample());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (37 * hash) + PERSAMPLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPerSample());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * note: plural
     * </pre>
     *
     * Protobuf type {@code hypercube.DimensionElements}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:hypercube.DimensionElements)
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElements_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElements_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.class, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.Builder.class);
      }

      // Construct using org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fieldsBuilder_.clear();
        }
        perSample_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.internal_static_hypercube_DimensionElements_descriptor;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getDefaultInstanceForType() {
        return org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance();
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements build() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements buildPartial() {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements result = new org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.perSample_ = perSample_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements) {
          return mergeFrom((org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements other) {
        if (other == org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (other.getPerSample() != false) {
          setPerSample(other.getPerSample());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fields_ = new java.util.ArrayList<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement>(fields_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> fieldsBuilder_;

      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder setFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder setFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder addFields(org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder addFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder addFields(
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder addFields(
          int index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public java.util.List<? extends org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.getDefaultInstance());
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.getDefaultInstance());
      }
      /**
       * <pre>
       * List of dimension elements field values (e.g. values for age, values for gender, etc)
       * </pre>
       *
       * <code>repeated .hypercube.DimensionElement fields = 1;</code>
       */
      public java.util.List<org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElement.Builder, org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElementOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private boolean perSample_ ;
      /**
       * <pre>
       * only used when this message is embedded in a packedObservations
       * </pre>
       *
       * <code>optional bool perSample = 2;</code>
       */
      public boolean getPerSample() {
        return perSample_;
      }
      /**
       * <pre>
       * only used when this message is embedded in a packedObservations
       * </pre>
       *
       * <code>optional bool perSample = 2;</code>
       */
      public Builder setPerSample(boolean value) {
        
        perSample_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * only used when this message is embedded in a packedObservations
       * </pre>
       *
       * <code>optional bool perSample = 2;</code>
       */
      public Builder clearPerSample() {
        
        perSample_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:hypercube.DimensionElements)
    }

    // @@protoc_insertion_point(class_scope:hypercube.DimensionElements)
    private static final org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements();
    }

    public static org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DimensionElements>
        PARSER = new com.google.protobuf.AbstractParser<DimensionElements>() {
      public DimensionElements parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DimensionElements(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DimensionElements> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DimensionElements> getParserForType() {
      return PARSER;
    }

    public org.transmartproject.rest.hypercubeProto.ObservationsProto.DimensionElements getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_DimensionDeclaration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_DimensionDeclaration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_FieldDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_FieldDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_Observation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_Observation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_PackedObservation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_PackedObservation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_DimensionElement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_DimensionElement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_Value_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_Value_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_Footer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_Footer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_hypercube_DimensionElements_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_hypercube_DimensionElements_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"src/protobuf/v2/observations.proto\022\thy" +
      "percube\"V\n\006Header\022>\n\025dimensionDeclaratio" +
      "ns\030\001 \003(\0132\037.hypercube.DimensionDeclaratio" +
      "n\022\014\n\004last\030\002 \001(\010\"\277\001\n\024DimensionDeclaration" +
      "\022\014\n\004name\030\001 \001(\t\022\035\n\004type\030\002 \001(\0162\017.hypercube" +
      ".Type\022*\n\006fields\030\003 \003(\0132\032.hypercube.FieldD" +
      "efinition\022\016\n\006inline\030\004 \001(\010\022\016\n\006packed\030\005 \001(" +
      "\010\022.\n\010elements\030\006 \001(\0132\034.hypercube.Dimensio" +
      "nElements\">\n\017FieldDefinition\022\014\n\004name\030\001 \001" +
      "(\t\022\035\n\004type\030\002 \001(\0162\017.hypercube.Type\"\244\001\n\013Ob",
      "servation\022\030\n\020dimensionIndexes\030\001 \003(\003\0225\n\020i" +
      "nlineDimensions\030\002 \003(\0132\033.hypercube.Dimens" +
      "ionElement\022\025\n\013stringValue\030\003 \001(\tH\000\022\026\n\014num" +
      "ericValue\030\004 \001(\001H\000\022\014\n\004last\030\007 \001(\010B\007\n\005value" +
      "\"\270\001\n\021PackedObservation\022\030\n\020dimensionIndex" +
      "es\030\001 \003(\003\0226\n\020inlineDimensions\030\002 \003(\0132\034.hyp" +
      "ercube.DimensionElements\022\024\n\014stringValues" +
      "\030\003 \003(\t\022\025\n\rnumericValues\030\004 \003(\001\022\026\n\016numOber" +
      "vations\030\005 \001(\005\022\014\n\004last\030\007 \001(\010\"\210\001\n\020Dimensio" +
      "nElement\022 \n\006fields\030\001 \003(\0132\020.hypercube.Val",
      "ue\022\020\n\010intValue\030\002 \001(\022\022\023\n\013doubleValue\030\003 \001(" +
      "\001\022\023\n\013stringValue\030\004 \001(\t\022\026\n\016timestampValue" +
      "\030\005 \001(\003\"l\n\005Value\022\025\n\013stringValue\030\001 \001(\tH\000\022\025" +
      "\n\013doubleValue\030\002 \001(\001H\000\022\022\n\010intValue\030\003 \001(\022H" +
      "\000\022\030\n\016timestampValue\030\004 \001(\003H\000B\007\n\005value\"9\n\006" +
      "Footer\022/\n\tdimension\030\001 \003(\0132\034.hypercube.Di" +
      "mensionElements\"a\n\021DimensionElements\022\014\n\004" +
      "name\030\003 \001(\t\022+\n\006fields\030\001 \003(\0132\033.hypercube.D" +
      "imensionElement\022\021\n\tperSample\030\002 \001(\010*B\n\004Ty" +
      "pe\022\n\n\006DOUBLE\020\000\022\n\n\006STRING\020\001\022\007\n\003INT\020\002\022\r\n\tT",
      "IMESTAMP\020\003\022\n\n\006OBJECT\020\004B=\n(org.transmartp" +
      "roject.rest.hypercubeProtoB\021Observations" +
      "Protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_hypercube_Header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_hypercube_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_Header_descriptor,
        new java.lang.String[] { "DimensionDeclarations", "Last", });
    internal_static_hypercube_DimensionDeclaration_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_hypercube_DimensionDeclaration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_DimensionDeclaration_descriptor,
        new java.lang.String[] { "Name", "Type", "Fields", "Inline", "Packed", "Elements", });
    internal_static_hypercube_FieldDefinition_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_hypercube_FieldDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_FieldDefinition_descriptor,
        new java.lang.String[] { "Name", "Type", });
    internal_static_hypercube_Observation_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_hypercube_Observation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_Observation_descriptor,
        new java.lang.String[] { "DimensionIndexes", "InlineDimensions", "StringValue", "NumericValue", "Last", "Value", });
    internal_static_hypercube_PackedObservation_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_hypercube_PackedObservation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_PackedObservation_descriptor,
        new java.lang.String[] { "DimensionIndexes", "InlineDimensions", "StringValues", "NumericValues", "NumObervations", "Last", });
    internal_static_hypercube_DimensionElement_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_hypercube_DimensionElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_DimensionElement_descriptor,
        new java.lang.String[] { "Fields", "IntValue", "DoubleValue", "StringValue", "TimestampValue", });
    internal_static_hypercube_Value_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_hypercube_Value_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_Value_descriptor,
        new java.lang.String[] { "StringValue", "DoubleValue", "IntValue", "TimestampValue", "Value", });
    internal_static_hypercube_Footer_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_hypercube_Footer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_Footer_descriptor,
        new java.lang.String[] { "Dimension", });
    internal_static_hypercube_DimensionElements_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_hypercube_DimensionElements_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_hypercube_DimensionElements_descriptor,
        new java.lang.String[] { "Name", "Fields", "PerSample", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
